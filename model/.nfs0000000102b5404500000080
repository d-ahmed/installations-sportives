import mysql.connector.errors as Error

class Equipement:

	def __init__(self,database):
		self.database=database


	def createTableEquipement(self):
		'''
			Cree la table equipement
				idEquipement - type integer, l'identifiant et la clef primaire d'un equipement
				nomEquipement - type text, le nom de l'equipement
				numeroInstallation - type integer, le numero de l'installation liee a la table
		'''	
		try:
			self.database.execute("CREATE TABLE equipement(idEquipement integer ,nomEquipement text, numeroInstallation integer, PRIMARY KEY (idEquipement))")
		except Error.ProgrammingError:
			print ("TABLE equipement : creation impossible car la table existe deja")


	def insertInTableEquipement(self,idEquipement,nomEquipement,numeroInstallation_activite):
		try:
			self.database.execute("INSERT INTO equipement (idEquipement,nomEquipement,numeroInstallation_activite) VALUES (%s,%s,%s)",(idEquipement,nomEquipement,numeroInstallation_activite))
		except Exception:
			print("Vous ne pouvez pas rentrer deux idEquipement identique")

                        
	def dropTableEquipement(self):
		try:
			self.database.execute("DROP TABLE IF EXISTS equipement")
		except Error.IntegrityError:
			print("TABLE equipements : ne peut etre supprimee car une ou plusieurs clefs etrangeres sont presentes")	
                        
	def deleInTableEquipement(self,idEquipement):
                try:
                        delf.database.execute("DELETE FROM equipement WHERE equipement.idEquipement=(%s)",(idEquipement,))
                except Exception:
                        print("Ce idEquipement n'existe pas")
                        

	def afficheEquipement(self):
		for row in self.database.execute('SELECT * FROM equipement ORDER BY nomEquipement'):
			print (row)


	def addCle_EtrangereInstallation(self):
		'''
			Ajoute une clef etrangere sur la table equipement
				numeroInstallation de la table equipement fait reference a numeroInstallation de la table installation 
		'''
		try:
			self.database.execute("ALTER TABLE equipement ADD CONSTRAINT numeroInstallation FOREIGN KEY  (numeroInstallation) REFERENCES installation(numeroInstallation)")
		except Error.DatabaseError:
			print("TABLE equipement : impossible d'ajouter la clef etrangere numeroInstallation car elle existe deja")
		

	def dropCle_EtrangereInstallation(self):
		try:
			self.database.execute("ALTER TABLE equipement DROP FOREIGN KEY numeroInstallation_activite")
		except Error.DatabaseError:
			print("TABLE equipement : clef etrangere inexistante")

		